<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

    <!-- This application context configures the unit-testing and has the following responsibilities:
            1.  It configures a MessageSource bean which is used by our controller class (feedback messages)
                and Spring MVC (validation error messages).
                The reason why we need to do this is that the MessageSource bean is configured in the “main”
                configuration class (or file) of our application context configuration.
            2. It creates a service layer mocks which injected to our controller class.
    -->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/messages"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <bean id="accountService" name="accountService" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.patimer.notifier.service.AccountService"/>
    </bean>


    <!-- Databae Configurations -->
    <mongo:mongo host="127.0.0.1" port="27017" />
    <mongo:db-factory dbname="test-nsdb"/>
    <!-- TODO: use db role -->

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

</beans>